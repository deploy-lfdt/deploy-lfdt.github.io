{"version":3,"file":"component---src-pages-news-index-js-48a15c4fe371d62bf4e9.js","mappings":"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","sources":["webpack://lafucinadeitalenti.it/./src/components/graphql-error-list.js","webpack://lafucinadeitalenti.it/./src/components/news-letter/news-letter.component.jsx","webpack://lafucinadeitalenti.it/./src/components/post-preview/post-preview.component.jsx","webpack://lafucinadeitalenti.it/./src/components/posts-list/posts-list.component.jsx","webpack://lafucinadeitalenti.it/./src/pages/news/index.js"],"sourcesContent":["import React from \"react\";\n\nconst GraphQLErrorList = ({ errors }) => (\n  <divv>\n    <h1>Error</h1>\n    {errors.map((error) => (\n      <pre key={error.message}>{error.message}</pre>\n    ))}\n  </divv>\n);\n\nexport default GraphQLErrorList;\n","import React from \"react\";\nimport { FaMailchimp } from \"react-icons/fa\";\nimport { respH } from \"../../lib/helpers\";\n\nimport \"./news-letter.styles.scss\";\n\nconst NewsLetter = () => {\n  return (\n    <section className=\"hero is-medium\">\n      <div className=\"hero-body has-text-centered\">\n        <div className=\"container is-max-desktop\">\n          <p className={`title ${respH(1)} mb-6`}>\n            Vuoi rimanere aggiornato sui nostri corsi?\n          </p>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"http://eepurl.com/h2J6nH\"\n            className=\"button is-medium is-rounded\"\n          >\n            <FaMailchimp className=\"mr-3\" /> Iscriviti alla newsletter\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NewsLetter;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { format } from \"date-fns\";\nimport { it } from \"date-fns/locale\";\nimport { respH } from \"../../lib/helpers.js\";\n\nimport \"./post-preview.styles.scss\";\n\nconst PostPreview = ({ node, options = {} }) => {\n  const newOptions = {\n    author: true,\n    shadows: true,\n    ...options,\n  };\n\n  const dateFolder = format(new Date(node.publishedAt), \"yyyy/MM\");\n\n  return (\n    <Link\n      className=\"block is-block\"\n      to={`/news/${dateFolder}/${node.slug.current}`}\n    >\n      <div className=\"card columns is-shadowless\">\n        <div className=\"card-image column is-one-third\">\n          <GatsbyImage\n            image={node.mainImage.asset.gatsbyImageData}\n            alt=\"image post\"\n          />\n        </div>\n        <div className=\"card-content column\">\n          <div className=\"media\">\n            {newOptions.author && (\n              <div className=\"media-left\">\n                <GatsbyImage\n                  imgClassName=\"has-rounded-corners\"\n                  image={node.author.image.asset.gatsbyImageData}\n                  alt=\"image autore\"\n                />\n              </div>\n            )}\n            <div className=\"media-content\">\n              <p className=\"subtitle is-6 is-capitalized\">\n                {node.categories &&\n                  node.categories.map((cat, i) => (\n                    <span key={i} className=\"is-size-6\">\n                      #{cat.title}{\" \"}\n                    </span>\n                  ))}{\" \"}\n                |{\" \"}\n                {format(new Date(node.publishedAt), \"d, MMMM, yyyy\", {\n                  locale: it,\n                })}\n              </p>\n              <p className={`title ${respH(4)} is-capitalized`}>{node.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            <p>{node.summary}</p>\n            {/* <PortableText value={node._rawBody} components={components}/> */}\n            {/* <pre>{JSON.stringify(node.summary, null, 2)}</pre> */}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default PostPreview;\n","import React, { useState, useEffect } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport PostPreview from \"../post-preview/post-preview.component\";\n\nimport \"./posts-list.styles.scss\";\n\nconst PostsList = ({ nodes }) => {\n  const { site } = useStaticQuery(query);\n\n  const initialSlice =\n    nodes.length <= site.siteMetadata.news.pagination.init\n      ? nodes.length\n      : site.siteMetadata.news.pagination.init;\n\n  const [list, setList] = useState([...nodes.slice(0, initialSlice)]);\n  const [loadMore, setLoadMore] = useState(false);\n  const [hasMore, setHasMore] = useState(\n    nodes.length > site.siteMetadata.news.pagination.init\n  );\n\n  const handleLoadMore = () => {\n    setLoadMore(true);\n  };\n\n  // Handle loading more articles\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const isMore = list.length < nodes.length;\n      const nextResults = isMore\n        ? nodes.slice(\n            list.length,\n            list.length + (site.siteMetadata.news.pagination.step || 3)\n          )\n        : [];\n      setList([...list, ...nextResults]);\n      setLoadMore(false);\n    }\n  }, [loadMore, hasMore, nodes, list, site.siteMetadata.news.pagination.step]);\n\n  //Check if there is more\n  useEffect(() => {\n    const isMore = list.length < nodes.length;\n    setHasMore(isMore);\n  }, [list, nodes]);\n\n  return (\n    <>\n      {list && list.map((node) => <PostPreview key={node.id} node={node} />)}\n\n      {hasMore ? (\n        <button\n          className=\"button is-link is-light is-fullwidth mt-6\"\n          onClick={handleLoadMore}\n        >\n          Load More\n        </button>\n      ) : (\n        <p className=\"is-hidden\">Nessun altro post</p>\n      )}\n    </>\n  );\n};\n\nexport default PostsList;\n\nconst query = graphql`\n  query NewsPaginationData {\n    site {\n      siteMetadata {\n        news {\n          pagination {\n            init\n            step\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../../components/layout\";\nimport PostsList from \"../../components/posts-list/posts-list.component\";\nimport GraphQLErrorList from \"../../components/graphql-error-list\";\nimport {\n  filterOutDocsPublishedInTheFuture,\n  filterOutDocsWithoutSlugs,\n  mapEdgesToNodes,\n} from \"../../lib/helpers\";\n\nimport Seo from \"../../components/seo\";\nimport NewsLetter from \"../../components/news-letter/news-letter.component\";\n\nimport \"./index.styles.scss\";\n\nexport const query = graphql`\n  query Posts {\n    posts: allSanityPost(\n      # limit: 3\n      sort: { fields: [publishedAt], order: DESC }\n      filter: { slug: { current: { ne: null } }, publishedAt: { ne: null } }\n    ) {\n      edges {\n        node {\n          id\n          publishedAt\n          title\n          summary\n          slug {\n            current\n          }\n          categories {\n            title\n          }\n          mainImage {\n            asset {\n              url\n              gatsbyImageData(width: 320, height: 200, placeholder: BLURRED)\n            }\n          }\n          author {\n            name\n            image {\n              asset {\n                gatsbyImageData(width: 48, aspectRatio: 1, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst News = ({ data, errors }) => {\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    );\n  }\n\n  const postNodes = (data || {}).posts\n    ? mapEdgesToNodes(data.posts)\n        .filter(filterOutDocsWithoutSlugs)\n        .filter(filterOutDocsPublishedInTheFuture)\n    : [];\n\n  return (\n    <Layout pageClass=\"news\">\n      <Seo title=\"News\" />\n      <section className=\"hero header is-large\">\n        <div className=\"hero-body\">\n          <div className=\"container is-max-desktop\">\n            <h1 className=\"title is-1 has-text-white has-text-centered mb-6 is-capitalized\">\n              Ultime notizie\n            </h1>\n          </div>\n        </div>\n      </section>\n      <section className=\"section is-medium\">\n        <div className=\"container is-max-desktop\">\n          <PostsList nodes={postNodes} />\n        </div>\n      </section>\n      <NewsLetter />\n    </Layout>\n  );\n};\n\nexport default News;\n"],"names":["errors","map","error","key","message","className","respH","target","rel","href","node","options","newOptions","author","shadows","dateFolder","format","Date","publishedAt","to","slug","current","G","image","mainImage","asset","gatsbyImageData","alt","imgClassName","categories","cat","i","title","locale","it","summary","nodes","site","useStaticQuery","query","initialSlice","length","siteMetadata","news","pagination","init","useState","slice","list","setList","loadMore","setLoadMore","hasMore","setHasMore","useEffect","nextResults","step","isMore","id","onClick","data","postNodes","posts","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","pageClass"],"sourceRoot":""}